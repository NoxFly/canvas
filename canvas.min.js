/**
 * @copyright   Copyright (C) 2019 - 2020 Dorian Thivolle All rights reserved.
 * @license     GNU General Public License version 3 or later; see LICENSE.txt
 * @author		Dorian Thivolle
 * @name		canvas
 * @package		NoxFly/canvas
 * @see			https://github.com/NoxFly/canvas
 * @since		30 Dec 2019
 * @version		{1.4.0}
*/
let ctx=null,canvas=null,width=0,height=0,realWidth=0,realHeight=0,mouseX=0,mouseY=0,fps=60;pixels=void 0;const documentWidth=()=>document.documentElement.clientWidth,documentHeight=()=>document.documentElement.clientHeight;let MIN_DOC_SIZE;const PI=Math.PI,isDevice={mobile:/iPhone|iPad|iPod|Android/i.test(navigator.userAgent),ios:/iPad|iPhone|iPod/.test(navigator.userAgent),android:/Android/.test(navigator.userAgent)},originArr=["topLeft","top","topRight","left","center","right","bottomLeft","bottom","bottomRight"];let sFontSize="12px",sFontFamily="Monospace",mouseDirection={x:0,y:0};const NOX_PV={bFill:!0,bStroke:!0,keys:{},isMouseDown:!1,oldMouseX:0,oldMouseY:0,isPointerLocked:!1,swipexDown:null,swipeyDown:null,swipePCEnable:!0,lastSwipe:null,bGuideLines:!1,loop:!0,now:0,then:Date.now(),interval:1e3/fps,delta:0,counter:0,time_el:0,colorTreatment:(...oColor)=>{if(oColor instanceof CanvasGradient||oColor instanceof CanvasPattern)return oColor;let n=oColor.length;if(1==n&&"number"==typeof oColor[0]){if(0<=(oColor=oColor[0])&&oColor<=255)return`rgb(${oColor}, ${oColor}, ${oColor})`}else{if(2==n&&oColor.every((c,i)=>"number"==typeof c&&0<=c&&c<=255||4==i&&0<=c&&c<=1))return`rgba(${oColor[0]}, ${oColor[0]}, ${oColor[0]}, ${oColor[1]>1?oColor[1]/255:oColor[1]})`;if([3,4].includes(n)&&oColor.every(c=>"number"==typeof c)){if(oColor.every((c,i)=>0<=c&&c<=255||4==i&&0<=c&&c<=1))return`rgb${4==n?"a":""}(${oColor[0]}, ${oColor[1]}, ${oColor[2]}${4==n?`, ${oColor[3]>1?oColor[3]/255:oColor[3]}`:""})`}else if(1==n&&"string"==typeof oColor[0]){let color=(oColor=oColor[0]).replace(/\s/gi,""),reg={hex:/^#([0-9a-z]{3}){1,2}$/i,rgb:/^rgba?\((\d{1,3},){2}\d{1,3}(,\d(\.\d+)?)?\)$/,hsl:/^hsl\(\d{1,3},\d{1,3}%,\d{1,3}%\)$/,name:/^\w{3,30}$/};for(let regex in reg)if(reg[regex].test(color))return oColor}else if(oColor[0]instanceof HEX||oColor[0]instanceof RGB||oColor[0]instanceof HSL)return oColor[0].toString()}return canvas?window.getComputedStyle(canvas).backgroundColor:"#000"},perlin:{lod:10,unit:1,gradient:[],seed:[],generateSeed:()=>Array(255).fill(0).map((i,j)=>j).sort(()=>Math.random()-.5),get:(x,y,lod=NOX_PV.perlin.lod,seed=NOX_PV.perlin.seed)=>{x/=lod,y/=lod;const[x0,y0]=[floor(x),floor(y)],[dx,dy,ii,jj]=[x-x0,y-y0,255&x0,255&y0];let stuv=[];for(let i=0;i<4;i++)try{const v=seed[(ii+i%2+seed[jj+floor(i/2)])%255]%NOX_PV.perlin.gradient.length;stuv[i]=NOX_PV.perlin.gradient[v][0]*(dx-i%2)+NOX_PV.perlin.gradient[v][1]*(dy-floor(i/2))}catch(e){stuv[i]=0}const[Cx,Cy]=[3*dx*dx-2*dx*dx*dx,3*dy*dy-2*dy*dy*dy],[Li1,Li2]=[stuv[0]+Cx*(stuv[1]-stuv[0]),stuv[2]+Cx*(stuv[3]-stuv[2])];return map(Li1+Cy*(Li2-Li1),-NOX_PV.perlin.unit,NOX_PV.perlin.unit,0,1)}}};NOX_PV.perlin.gradient=[[NOX_PV.perlin.unit,NOX_PV.perlin.unit],[-NOX_PV.perlin.unit,NOX_PV.perlin.unit],[NOX_PV.perlin.unit,-NOX_PV.perlin.unit],[-NOX_PV.perlin.unit,-NOX_PV.perlin.unit]];const moveTo=(x,y)=>ctx.moveTo(x,y),lineTo=(x,y)=>ctx.lineTo(x,y),arcTo=(x1,y1,x2,y2,r)=>ctx.arcTo(x1,y1,x2,y2,r),line=(x1,y1,x2,y2)=>{beginPath(),moveTo(x1,y1),lineTo(x2,y2),NOX_PV.bStroke&&ctx.stroke(),closePath()},polyline=(...values)=>{if(values.length%2!=0)return console.error("The function polyline must take an even number of values");beginPath(),values.length>0&&moveTo(values[0],values[1]);for(let i=2;i<values.length;i+=2){let x=values[i],y=values[i+1];lineTo(x,y)}NOX_PV.bStroke&&ctx.stroke(),NOX_PV.bFill&&ctx.fill(),closePath()},arc=(x,y,r,start,end,antiClockwise=!1)=>{beginPath(),ctx.arc(x,y,r,start,end,antiClockwise),NOX_PV.bStroke&&ctx.stroke(),NOX_PV.bFill&&ctx.fill(),closePath()},circle=(x,y,r)=>{arc(x,y,r,0,2*PI)},fillRect=(x,y,w,h)=>{ctx.fillRect(x,y,w,h),NOX_PV.bFill&&ctx.fill(),NOX_PV.bStroke&&ctx.stroke()},strokeRect=(x,y,w,h)=>{ctx.strokeRect(x,y,w,h),NOX_PV.bFill&&ctx.fill(),NOX_PV.bStroke&&ctx.stroke()},rect=(x,y,w,h)=>{ctx.rect(x,y,w,h),NOX_PV.bFill&&ctx.fill(),NOX_PV.bStroke&&ctx.stroke()},path=p=>{if(!(p=p.trim()).startsWith("M"))return;p=p.split(" ");let mode="M";const modes={M:{n:2,f:(x,y)=>moveTo(x,y)},L:{n:2,f:(x,y)=>lineTo(x,y)},H:{n:1,f:(x,y)=>lineTo(x,y)},V:{n:1,f:(y,x)=>lineTo(x,y)},A:{n:6,f:(x,y,r,start,end,antiClockwise)=>ctx.arc(x,y,r,radian(start),radian(end),1===antiClockwise)},Z:{n:0,f:()=>lineTo(parseFloat(p[1]),parseFloat(p[2]))}},reg=new RegExp(`^[${Object.keys(modes).join("")}]|(-?d+(.d+)?)$`,"i");if(0==p.filter(point=>reg.test(point)).length)return;if(p.length<3)return;let d=[];const lastIdx=p.length-1;for(let i=0;i<p.length;i++){let point=p[i];if(/[a-z]/i.test(point)){if(mode=point,"Z"==mode){if(i!=lastIdx)return;d.push("Z")}if(["z"].includes(mode))return;const nArg=modes[mode.toUpperCase()].n;if(lastIdx-nArg<i)return;let lastPos={x:0,y:0};if(d.length>0){let prev=d[d.length-1],hv=["H","V"].indexOf(prev[0]);if(-1!==hv)lastPos.x=prev[1+hv],lastPos.y=prev[2-hv];else{let k=1;lastPos.x=prev[k],lastPos.y=prev[k+1]}}let arr=[mode.toUpperCase()],hv=["H","V"].indexOf(arr[0]);for(let j=0;j<nArg;j++){i++;let n=parseFloat(p[i]);if(isNaN(n))return;arr.push(n)}if(-1!==hv&&arr.push(lastPos[Object.keys(lastPos)[1-hv]]),"A"==arr[0]&&(arr[1]-=arr[3]),/[mlhva]/.test(mode)&&("v"===mode?arr[1]+=lastPos.y:"h"===mode?arr[1]+=lastPos.x:(arr[1]+=lastPos.x,arr[2]+=lastPos.y)),d.push(arr),"A"==arr[0]){const angle=radian(arr[5]);let x=arr[1]+cos(angle)*arr[3];y=arr[2]+sin(angle)*arr[3],d.push(["M",x,y])}}}beginPath(),d.forEach(step=>{"string"==typeof step?modes[step].f():modes[step[0]].f(...step.slice(1))}),NOX_PV.bFill&&ctx.fill(),NOX_PV.bStroke&&ctx.stroke(),closePath()},text=(txt,x=0,y=0)=>{if(/\n/.test(txt)){const size=sFontSize.replace(/(\d+)(\w+)?/,"$1");txt=txt.split("\n");for(let i=0;i<txt.length;i++)ctx.fillText(txt[i],x,y+i*size)}else ctx.fillText(txt,x,y)},setFont=(size,font)=>{ctx.font=`${size}px ${font}`,sFontSize=`${size}px`,sFontFamily=font},fontSize=size=>{ctx.font=`${size}px ${sFontFamily}`,sFontSize=`${size}px`},fontFamily=font=>{ctx.font=`${sFontSize} ${font}`,sFontFamily=font},alignText=alignment=>{ctx.textAlign=["left","right","center","start","end"].indexOf(alignment)>-1?alignment:"left"},bezierCurveTo=(cp1x,cp1y,cp2x,cp2y,x,y)=>{ctx.bezierCurveTo(cp1x,cp1y,cp2x,cp2y,x,y)},quadraticCurveTo=(cpx,cpy,x,y)=>{ctx.quadraticCurveTo(cpx,cpy,x,y)},push=()=>ctx.save(),pop=()=>ctx.restore(),translate=(x,y)=>ctx.translate(x,y),rotate=degree=>ctx.rotate(radian(degree)),clip=(...args)=>ctx.clip(...args),scale=(x,y)=>ctx.scale(x,y),noFill=()=>{NOX_PV.bFill=!1},noStroke=()=>{NOX_PV.bStroke=!1},background=(...color)=>{canvas.style.backgroundColor=NOX_PV.colorTreatment(...color)},stroke=(...color)=>{ctx.strokeStyle=NOX_PV.colorTreatment(...color),NOX_PV.bStroke=!0},strokeWeight=weight=>{ctx.lineWidth=weight},linecap=style=>{ctx.lineCap=["butt","round","square"].indexOf(style)>-1?style:"butt"},fill=(...color)=>{ctx.fillStyle=NOX_PV.colorTreatment(...color),NOX_PV.bFill=!0},createLinearGradient=(x1,y1,x2,y2)=>ctx.createLinearGradient(x1,y1,x2,y2),makeLinearGradient=(x1,y1,x2,y2,...params)=>{if(params.length%2!=0)return console.error("you have to tell params by pair (offset, color). Odd number of arguments given.");const grad=createLinearGradient(x1,y1,x2,y2);for(let i=0;i<params.length;i+=2){const offset=params[i],color=NOX_PV.colorTreatment(params[i+1]);grad.addColorStop(offset,color)}return grad},clearRect=(x,y,w,h)=>ctx.clearRect(x,y,x+w,y+h),beginPath=()=>ctx.beginPath(),closePath=()=>ctx.closePath(),drawFocusIfNeeded=(elementOrPath2D,element=null)=>{null!==element||elementOrPath2D instanceof Path2D?ctx.drawFocusIfNeeded(elementOrPath2D,element):ctx.drawFocusIfNeeded(elementOrPath2D)},setLineDash=array=>{if(!Array.isArray(array))return console.error("Array type expected. Got "+typeof array);ctx.setLineDash(array)},getLineDash=()=>ctx.getLineDash(),globalAlpha=globalAlpha=>{ctx.globalAlpha=globalAlpha},globalCompositeOperation=type=>{ctx.globalCompositeOperation=type},setSmoothingQuality=quality=>{["low","medium","high"].includes(quality)&&(ctx.imageSmoothingQuality=quality)},isPointInPath=function(x,y,fillRule=null){return ctx.isPointInPath(...arguments)},isPointInStroke=function(x,y){return ctx.isPointInStroke(...arguments)},getTransform=()=>ctx.getTransform(),lineDashOffset=(value=0)=>{ctx.lineDashOffset=value},lineJoin=type=>{ctx.lineJoin=type},measureText=text=>ctx.measureText(text),resetTransform=()=>ctx.resetTransform(),setTransform=(...transform)=>ctx.setTransform(...transform),createPattern=(image,repetition)=>{ctx.createPattern(image,repetition)},createImageData=function(widthOrImageData,height=null){return ctx.createImageData(...arguments)},putImageData=(imageData,dx,dy,dirtyX=null,dirtyY=null,dirtyWidth=null,dirtyHeight=null)=>{null===dirtyX?ctx.putImageData(imageData,dx,dy):ctx.putImageData(imageData,dx,dy,dirtyX,dirtyY,dirtyWidth,dirtyHeight)},getImageData=(sx,sy,sw,sh)=>ctx.getImageData(sx,sy,sw,sh),drawImage=(image,sx,sy,sWidth=null,sHeight=null,dx=null,dy=null,dWidth=null,dHeight=null)=>{null===sWidth?ctx.drawImage(image,sx,sy):null===dx?ctx.drawImage(image,sx,sy,sWidth,sHeight):ctx.drawImage(image,sx,sy,sWidth,sHeight,dx,dy,dWidth,dHeight)},radian=deg=>deg*(PI/180),degree=rad=>rad*(180/PI),angleToVector=angle=>new Vector(cos(angle),sin(angle)),vectorToAngle=vec=>{const baseVector=new Vector(1,0);return angleBetweenVectors(baseVector,vec)},angleBetweenVectors=(a,b)=>{const ab=a.x*b.x+a.y*b.y+a.z*b.z,cosO=ab/(a.mag*b.mag),O=acos(cosO);return O},dist=(a,b)=>Math.hypot(b.x-a.x,b.y-a.y,b.z-a.z),map=(arrayOrValue,start1,end1,start2,end2)=>{const m=val=>(val-start1)*(end2-start2)/(end1-start1)+start2;return"number"==typeof arrayOrValue?m(arrayOrValue):arrayOrValue.map(val=>m(val))},pow=(n,p=2)=>Math.pow(n,p),abs=n=>n>=0?n:-n,sqrt=n=>Math.sqrt(n),min=(...values)=>Math.min(...values),max=(...values)=>Math.max(...values),round=n=>Math.round(n),floor=n=>Math.floor(n),ceil=n=>Math.ceil(n),trunc=n=>Math.trunc(n),random=(iMin,iMax=0)=>floor(Math.random()*(max(iMin,iMax)-min(iMin,iMax)+1))+min(iMin,iMax),sin=x=>Math.sin(x),cos=x=>Math.cos(x),tan=x=>Math.tan(x),asin=x=>Math.asin(x),acos=x=>Math.acos(x),atan=x=>Math.atan(x),atan2=(x,y)=>Math.atan2(y,x),sinh=x=>Math.sinh(x),cosh=x=>Math.cosh(x),exp=x=>Math.exp(x),log=x=>Math.log(x),log10=x=>Math.log10(x),sum=(...values)=>values.reduce((a,b)=>a+b),mean=(...values)=>sum(...values)/values.length,median=(...values)=>{if(0===values.length)return 0;values.sort((a,b)=>a-b);let half=floor(values.length/2);return values.length%2?values[half]:(values[half-1]+values[half])/2},mode=(...values)=>values.reduce((a,b,i,arr)=>arr.filter(v=>v===a).length>=arr.filter(v=>v===b).length?a:b,null),variance=(...values)=>values.reduce((a,b)=>a+pow(b-mean(...values)),0),std=(...values)=>sqrt(variance(...values));class RGB{constructor(r,g=null,b=null,a=255){this.color={r:0,g:0,b:0},void 0===r&&(r=0),null!==g&&null===b&&(a=g,g=b=r),null===g&&(g=r,b=r),this.r=r,this.g=g,this.b=b,this.a=a}valueInInterval(val){return val<0||val>255?(console.error(`Color interval [0 - 255] no repespected (${val} given)`),min(max(val,0),255)):val}get r(){return this.color.r}get g(){return this.color.g}get b(){return this.color.b}get a(){return this.color.a}set r(val){this.color.r=this.valueInInterval(val)}set g(val){this.color.g=this.valueInInterval(val)}set b(val){this.color.b=this.valueInInterval(val)}set a(val){this.color.a=this.valueInInterval(val)}set(r,g,b,a=null){this.r=r,this.g=g,this.b=b,null!==a&&(this.a=a)}toString(){return`rgb${255!=this.a?"a":""}(${this.r}, ${this.g}, ${this.b}${255!=this.a?`, ${round(this.a/255*10)/10}`:""})`}intVal(){return[this.r,this.g,this.b,this.a]}toHEX(){let r=Number(this.r).toString(16);r.length<2&&(r="0"+r);let g=Number(this.g).toString(16);g.length<2&&(g="0"+g);let b=Number(this.b).toString(16);b.length<2&&(b="0"+b);const rgb="#"+r+g+b;return new HEX(rgb)}toHSL(){const r=this.r/255,g=this.g/255,b=this.b/255,imax=max(r,g,b),imin=min(r,g,b);let h,s,l=(imax+imin)/2;if(imax==imin)h=s=0;else{let d=imax-imin;switch(s=l>.5?d/(2-imax-imin):d/(imax+imin),imax){case r:h=(g-b)/d+(g<b?6:0);break;case g:h=(b-r)/d+2;break;case b:h=(r-g)/d+4}h/=6}return new HSL(round(10*h)/10,round(10*s)/10,round(10*l)/10)}}class HEX{constructor(hexaColor){this.color={int:0,str:"#000000"},this.set(hexaColor)}toString(){return this.color.str}intVal(){return this.color.int}set(hexaColor){if("number"==typeof hexaColor){this.color.int=hexaColor;let h=hexaColor.toString(16)+"";this.color.str="#"+(4==h.length?"00":"")+h}else"string"==typeof hexaColor&&/^#?([0-9a-f]{3}){1,2}$/i.test(hexaColor)?(3==(hexaColor=hexaColor.replace("#","")).length&&(hexaColor=hexaColor[0].repeat(2)+hexaColor[1].repeat(2)+hexaColor[2].repeat(2)),this.color.str="#"+hexaColor,this.color.int=parseInt(hexaColor,16)):console.error(`Given parameter isn't a recognized hexadecimal number: ${hexaColor}`)}toRGB(){const r=(16711680&this.intVal())>>>16,g=(65280&this.intVal())>>>8,b=255&this.intVal();return new RGB(r,g,b)}toHSL(){return this.toRGB().toHSL()}}class HSL{constructor(hue,saturation=.5,light=.5){this.color={h:0,s:0,l:0},"number"!=typeof hue&&(console.error(`Hue given parameter isn't a recognized number value: ${hue}`),hue=0),this.h=hue,this.s=saturation,this.l=light}get h(){return this.color.h}get s(){return this.color.s}get l(){return this.color.l}set h(hue){this.color.h=hue>=0?hue%360:360-abs(hue)%360}set s(saturation){this.color.s=min(max(saturation,0),1)}set l(luminosity){this.color.l=min(max(luminosity,0),1)}add(hueToAdd){this.h=this.h+hueToAdd}sub(hueToSub){this.h=this.h-hueToSub}lighten(lightToAdd){this.l=this.l+lightToAdd}obscure(lightToSub){this.l=this.l-lightToSub}addSat(saturationToAdd){this.s=this.s+saturationToAdd}subSat(saturationToSub){this.s=this.s-saturationToSub}toString(){return`hsl(${this.h}, ${100*this.s}%, ${100*this.l}%)`}intVal(){return this.toHEX().intVal()}toHEX(){return this.toRGB().toHEX()}toRGB(){const C=(1-abs(2*this.l-1))*this.s,hh=this.h/60,X=C*(1-abs(hh%2-1));let r,g,b;r=g=b=0,hh>=0&&hh<1?[r,g]=[C,X]:hh>=1&&hh<2?[r,g]=[X,C]:hh>=2&&hh<3?[g,b]=[C,X]:hh>=3&&hh<4?[g,b]=[X,C]:[r,b]=hh>=4&&hh<5?[X,C]:[C,X];const m=this.l-C/2;return r=round(255*(r+m)),g=round(255*(g+m)),b=round(255*(b+m)),new RGB(r,g,b)}}const frameRate=f=>{f>=0&&(NOX_PV.interval=1e3/f)},getSwipe=()=>NOX_PV.lastSwipe,isKeyDown=keyCode=>NOX_PV.keys[keyCode],isKeyUp=keyCode=>!NOX_PV.keys[keyCode],rendering=(x,y=null)=>new Vector((x instanceof Vector&&!y?x.x:x)*width/realWidth,(x instanceof Vector&&!y?x.y:y)*height/realHeight),renderingX=x=>x*width/realWidth,renderingY=y=>y*height/realHeight,mouseDir=()=>NOX_PV.isPointerLocked?mouseDirection:mouseX>NOX_PV.oldMouseX&&mouseY>NOX_PV.oldMouseY?"BOTTOM_RIGHT":mouseX>NOX_PV.oldMouseX&&mouseY<NOX_PV.oldMouseY?"TOP_RIGHT":mouseX<NOX_PV.oldMouseX&&mouseY<NOX_PV.oldMouseY?"TOP_LEFT":mouseX<NOX_PV.oldMouseX&&mouseY>NOX_PV.oldMouseY?"BOTTOM_LEFT":mouseX>NOX_PV.oldMouseX&&mouseY==NOX_PV.oldMouseY?"RIGHT":mouseX==NOX_PV.oldMouseX&&mouseY>NOX_PV.oldMouseY?"DOWN":mouseX==NOX_PV.oldMouseX&&mouseY<NOX_PV.oldMouseY?"UP":mouseX<NOX_PV.oldMouseX&&mouseY==NOX_PV.oldMouseY?"LEFT":null,enablePCswipe=bool=>{NOX_PV.swipePCEnable="boolean"!=typeof bool||bool,NOX_PV.swipePCEnable?(document.addEventListener("mousedown",handleTouchStart,!1),document.addEventListener("mousemove",handleTouchMove,!1)):(document.removeEventListener("mousedown",handleTouchStart,!0),document.removeEventListener("mousemove",handleTouchMove,!0))},setPixelResolution=(w,h)=>{w<=0||h<=0||(canvas&&ctx?(realWidth=w,realHeight=h,canvas.width=realWidth,canvas.height=realHeight,canvas.style.width=width+"px",canvas.style.height=height+"px"):console.warn("No canvas created yet, so cannot apply changes for its size."))},setCanvasSize=(newWidth,newHeight)=>{canvas&&ctx?(canvas.style.width=newWidth+"px",canvas.style.height=newHeight+"px",canvas.width=newWidth,canvas.height=newHeight,width=newWidth,height=newHeight):console.warn("No canvas created yet, so cannot apply changes for its size.")},createCanvas=(w,h,bg="#000",requestPointerLock=!1,container=document.body)=>{if(void 0===w&&void 0===h&&(w=documentWidth(),h=documentHeight()),!(w<=0||h<=0))return null!=canvas&&(document.querySelector("#"+canvas.id).remove(),canvas=null,ctx=null),canvas=document.createElement("canvas"),width=w,height=h,canvas.width=width,canvas.height=height,canvas.style.width=width,canvas.style.height=height,realWidth=width,realHeight=height,canvas.id="dynamic-canvas",canvas.style.background=NOX_PV.colorTreatment(bg),container.appendChild(canvas),requestPointerLock&&(canvas.requestPointerLock=canvas.requestPointerLock||canvas.mozRequestPointerLock,document.exitPointerLock=document.exitPointerLock||document.mozExitPointerLock,document.addEventListener("pointerlockchange",()=>{document.pointerLockElement&&"dynamic-canvas"==document.pointerLockElement.id||(NOX_PV.isPointerLocked=!1)},!1),canvas.onclick=()=>{NOX_PV.isPointerLocked||(NOX_PV.isPointerLocked=!0,canvas.requestPointerLock())}),ctx=canvas.getContext("2d"),canvas;console.warn("Canvas size must be higher than 0")},showGuideLines=bool=>{NOX_PV.bGuideLines="boolean"==typeof bool&&bool};let drawCond=()=>!0;const setDrawCondition=(condition=null)=>{condition&&(drawCond=condition)},drawLoop=()=>{!0===NOX_PV.loop&&requestAnimationFrame(drawLoop),NOX_PV.now=Date.now(),NOX_PV.delta=NOX_PV.now-NOX_PV.then,NOX_PV.delta>NOX_PV.interval&&(NOX_PV.then=NOX_PV.now-NOX_PV.delta%NOX_PV.interval,fps=parseInt(NOX_PV.counter/NOX_PV.time_el),ctx&&"undefined"!=typeof draw&&drawCond()&&(clearRect(0,0,width,height),draw(),NOX_PV.bGuideLines&&(fill("#46eaea"),stroke("#46eaea"),strokeWeight(1),line(0,mouseY,width,mouseY),line(mouseX,0,mouseX,height),text(`${Math.floor(mouseX)}, ${Math.floor(mouseY)}`,mouseX+5,mouseY-5))))},noLoop=()=>{NOX_PV.loop=!1},enableSmoothing=()=>{ctx&&(ctx.imageSmoothingEnabled=!0)},disableSmoothing=()=>{ctx&&(ctx.imageSmoothingEnabled=!1)},loadPixels=()=>{if(void 0!==ctx&&void 0!==canvas&&null!==ctx&&null!==canvas){NOX_PV.pixels=ctx.createImageData(canvas.width,canvas.height),pixels=NOX_PV.pixels.data;for(let i=0;i<width*height;i++)pixels[4*i+3]=255}else console.warn("Can't load canvas's pixels : no existing context found.")},updatePixels=()=>{"undefined"!=typeof pixels&&ctx&&(NOX_PV.pixels.data=pixels,ctx.putImageData(NOX_PV.pixels,0,0))},perlin=(x,y=0)=>(NOX_PV.perlin.seed&&0!==NOX_PV.perlin.seed.length||(NOX_PV.perlin.seed=NOX_PV.perlin.generateSeed()),NOX_PV.perlin.get(x,y)),noiseDetails=detailLevel=>{"number"==typeof detailLevel&&(NOX_PV.perlin.lod=detailLevel)};class PerlinNoise{static mapNumberTypes=["default","rgb","hsl"];static getMapNumberTypeIndex=typeStr=>PerlinNoise.mapNumberTypes.indexOf(typeStr.toLowerCase());constructor(lod=10,x=0,y=0,w=width,h=height,mapNumber="default"){this.lod=lod,this.seed=NOX_PV.perlin.generateSeed(),this.start={x:x,y:y},this.size={width:w,height:h},this.array=[],this.numberMapStyle=PerlinNoise.getMapNumberTypeIndex(mapNumber),this.calculate()}setLOD(lod){const tmp=this.lod;this.lod=lod,tmp!==lod&&this.calculate()}regenerateSeed(){this.seed=NOX_PV.perlin.generateSeed(),this.calculate()}setMapNumber(mapNumber){if(mapNumber=PerlinNoise.getMapNumberTypeIndex(mapNumber),this.numberMapStyle===mapNumber)return;let Lmin=0,Lmax=NOX_PV.perlin.unit,Rmin=0,Rmax=NOX_PV.perlin.unit;this.numberMapStyle>0&&([Lmin,Lmax]=[0,1===this.numberMapStyle?255:360]),this.numberMapStyle=mapNumber,this.numberMapStyle>0&&([Rmin,Rmax]=[0,1===this.numberMapStyle?255:360]),this.array.forEach((row,i)=>{this.array[i]=map(this.array[i],Lmin,Lmax,Rmin,Rmax)})}calculate(){this.array=[];for(let y=this.start.y;y<this.start.y+this.size.height;y++){let row=[];for(let x=this.start.x;x<this.start.x+this.size.width;x++)row.push(NOX_PV.perlin.get(x,y,this.lod,this.seed));this.array.push(row)}this.numberMapStyle>0&&this.setMapNumber(PerlinNoise.mapNumberTypes[this.numberMapStyle])}}const handleTouchStart=e=>{let getTouches;NOX_PV.isMouseDown=!0,"undefined"!=typeof mouseDown&&mouseDown(e);const firstTouch=(e2=>e2.touches||[{clientX:e.clientX,clientY:e.clientY},null])(e)[0];NOX_PV.swipexDown=firstTouch.clientX,NOX_PV.swipeyDown=firstTouch.clientY},handleTouchMove=e=>{if("undefined"!=typeof mouseDown&&NOX_PV.isMouseDown&&mouseDown(e),!NOX_PV.swipexDown||!NOX_PV.swipeyDown)return;let xUp,yUp;e.touches?(xUp=e.touches[0].clientX,yUp=e.touches[0].clientY):(xUp=e.clientX,yUp=e.clientY);let xDiff=NOX_PV.swipexDown-xUp,yDiff=NOX_PV.swipeyDown-yUp,event,swipeDir;Math.abs(xDiff)>Math.abs(yDiff)?xDiff>0?(swipeDir="left")&&(event=new CustomEvent("swipeleft",{detail:{swipe:"left"}})):(swipeDir="right")&&(event=new CustomEvent("swiperight",{detail:{swipe:"right"}})):yDiff>0?(swipeDir="up")&&(event=new CustomEvent("swipeup",{detail:{swipe:"up"}})):(swipeDir="down")&&(event=new CustomEvent("swipedown",{detail:{swipe:"down"}})),canvas.dispatchEvent(event),NOX_PV.lastSwipe=swipeDir,NOX_PV.swipexDown=null,NOX_PV.swipeyDown=null},getOffsetVector=shape=>{if(!(shape instanceof Shape))return console.error("Argument must be a Shape type"),new Vector(0,0);let vec=new Vector(0,0),w,h,o;switch(shape instanceof RectangleShape?(w=shape.width/2,h=shape.height/2,o=new Vector(0,0)):shape instanceof CircleShape&&(w=shape.r,h=w,o=new Vector(shape.r,shape.r),vec.set(shape.r,shape.r)),shape.origin){case"topLeft":vec.set(-o.x,-o.y);break;case"top":vec.set(w-o.x,-o.y);break;case"topRight":vec.set(2*w-o.x,-o.y);break;case"left":vec.set(-o.x,h-o.y);break;case"center":vec.set(w-o.x,h-o.y);break;case"right":vec.set(2*w-o.x,h-o.y);break;case"bottomLeft":vec.set(-o.x,2*h-o.y);break;case"bottom":vec.set(w-o.x,2*h-o.y);break;case"bottomRight":vec.set(2*w-o.x,2*h-o.y)}return vec},initializeCanvasWorld=()=>{window&&(window.onload=()=>{MIN_DOC_SIZE=min(documentWidth(),documentHeight()),"undefined"!=typeof setup&&(setup(),void 0===pixels&&delete pixels);const offset=elt=>{let rect=elt.getBoundingClientRect();return{top:rect.top+document.body.scrollTop,left:rect.left+document.body.scrollLeft}};canvas&&(canvas.addEventListener("mousemove",e=>{NOX_PV.oldMouseX=mouseX,NOX_PV.oldMouseY=mouseY,mouseX=e.clientX-offset(canvas).left,mouseY=e.clientY-offset(canvas).top,mouseDirection={x:e.movementX,y:e.movementY},"undefined"!=typeof mouseMove&&mouseMove(e)}),canvas.addEventListener("touchstart",handleTouchStart,!1),canvas.addEventListener("touchmove",handleTouchMove,!1),canvas.addEventListener("mouseup",e=>{NOX_PV.isMouseDown=!1,"undefined"!=typeof mouseUp&&mouseUp(e)}),canvas.addEventListener("click",e=>{"undefined"!=typeof onClick&&onClick(e)}),NOX_PV.swipePCEnable&&(canvas.addEventListener("mousedown",handleTouchStart,!1),canvas.addEventListener("mousemove",handleTouchMove,!1)),"undefined"!=typeof onSwipe&&(canvas.addEventListener("swipeleft",()=>{onSwipe("left")},!1),canvas.addEventListener("swiperight",()=>{onSwipe("right")},!1),canvas.addEventListener("swipeup",()=>{onSwipe("up")},!1),canvas.addEventListener("swipedown",()=>{onSwipe("down")},!1)),canvas.addEventListener("mouseenter",e=>{"undefined"!=typeof mouseEnter&&mouseEnter(e)}),canvas.addEventListener("mouseleave",e=>{"undefined"!=typeof mouseLeave&&mouseLeave(e)}),canvas.addEventListener("wheel",e=>{"undefined"!=typeof mouseWheel&&mouseWheel(e)}),canvas.oncontextmenu=e=>{"undefined"!=typeof onContextmenu&&onContextmenu(e)},canvas.ondblclick=e=>{"undefined"!=typeof onDblClick&&onDblClick(e)}),window.onkeypress=e=>{NOX_PV.keys[e.keyCode]=!0,"undefined"!=typeof keyPress&&keyPress(e)},window.onkeydown=e=>{NOX_PV.keys[e.keyCode]=!0,"undefined"!=typeof keyDown&&keyDown(e)},window.onkeyup=e=>{NOX_PV.keys[e.keyCode]=!1,"undefined"!=typeof keyUp&&keyUp(e)},window.onresize=()=>{let newWidth=document.documentElement.clientWidth,newHeight=document.documentElement.clientHeight;MIN_DOC_SIZE=min(newWidth,newHeight),"undefined"!=typeof onResize&&onResize(newWidth,newHeight)},window.onblur=()=>{"undefined"!=typeof onBlur&&onBlur()},window.onfocus=()=>{"undefined"!=typeof onFocus&&onFocus()},window.ononline=e=>{"undefined"!=typeof onOnline&&onOnline(e)},window.onoffline=e=>{"undefined"!=typeof onOffline&&onOffline(e)},drawLoop()})};initializeCanvasWorld();const collision=(shape1,shape2)=>{if(!(shape1 instanceof Shape&&shape2 instanceof Shape))return void console.error("Collision is only for 2 Shape types");const colRaR=(a,b)=>{let x2=x1+a.width,y2=y1+a.height,x4=x3+b.width,y4=y3+b.height;return x1<x4&&x2>x3&&y1<y4&&y2>y3},colRaC=(r,c)=>{offset1=getOffsetVector(r),offset2=getOffsetVector(c);let cx=c.x-offset2.x,cy=c.y-offset2.y,rx=r.x-offset1.x,ry=r.y-offset1.y,testX=cx<rx?rx:cx>rx+r.width?rx+r.width:cx,testY=cy<ry?ry:cy>ry+r.height?ry+r.height:cy;return sqrt(pow(cx-testX)+pow(cy-testY))<=c.r},colCaC=(c1,c2)=>{let dx=x1-x3,dy=y1-y3;return sqrt(dx*dx+dy*dy)<c1.r+c2.r};let offset1=getOffsetVector(shape1),offset2=getOffsetVector(shape2),x1=shape1.x-offset1.x,y1=shape1.y-offset1.y,x3=shape2.x-offset2.x,y3=shape2.y-offset2.y;if(shape1 instanceof RectangleShape){if(shape2 instanceof RectangleShape)return colRaR(shape1,shape2);if(shape2 instanceof CircleShape)return colRaC(shape1,shape2)}else if(shape1 instanceof CircleShape){if(shape2 instanceof CircleShape)return colCaC(shape1,shape2);if(shape2 instanceof RectangleShape)return colRaC(shape2,shape1)}return!1};class Time{static units={nano:ms=>1e8*ms,micro:ms=>1e3*ms,milli:(t,unit="milli")=>{switch(unit){case"nano":return t/1e8;case"micro":return t/1e3;case"seconds":return 1e3*t;case"minutes":return 6e4*t;default:return t}},seconds:ms=>ms/1e3,minutes:ms=>ms/6e4};constructor(startingTime,unity="milli"){void 0!==startingTime&&Object.keys(Time.units).includes(unity)?(this.start=Time.units.milli(startingTime,unity),this.staticTime=!0):(this.reset(),this.staticTime=!1)}asNanoseconds(){return Time.units.nano(this.asMilliseconds())}asMicroseconds(){return Time.units.micro(this.asMilliseconds())}asMilliseconds(){return Time.units.milli(this.staticTime?this.start:Date.now()-this.start)}asSeconds(){return Time.units.seconds(this.asMilliseconds())}asMinutes(){return Time.units.minutes(this.asMilliseconds())}reset(){this.start=Date.now()}}class Vector{constructor(x,y=null,z=null){let dimension=1;this.coords={x:0,y:0,z:0},x instanceof Vector?(dimension=x.dimension,this.coords.x=x.x,2==dimension&&(this.coords.y=x.y),3==dimension&&(this.coords.z=x.z)):(this.coords.x=x,null!==y?(this.coords.y=y,dimension++):this.coords.y=0,null!==z?(this.coords.z=z,dimension++):this.coords.z=0),this.constants=Object.freeze({dimension:dimension})}get dimension(){return this.constants.dimension}get x(){return this.coords.x}get y(){return this.coords.y}get z(){return this.coords.z}set x(x){this.coords.x=x}set y(y){this.dimension>1?this.coords.y=y:console.error("Cannot modify the Y of a 1D vector")}set z(z){this.dimension>2?this.coords.z=z:console.error(`Cannot modify the Y of a ${this.dimension}D vector`)}normalize(apply=!1){let norm=Math.sqrt(pow(this.x)+pow(this.y)+pow(this.z)),me=new Vector(this);return 0!=norm&&(apply&&(this.x=this.x/norm,this.dimension>1&&(this.y=this.y/norm),this.dimension>2&&(this.z=this.z/norm)),me.x=me.x/norm,me.dimension>1&&(me.y=me.y/norm),me.dimension>2&&(me.z=me.z/norm)),me}set(x,y=0,z=0){return this.x=x,this.dimension>1&&(this.y=y),this.dimension>2&&(this.z=z),this}add(vec){return vec instanceof Vector?(this.x+=vec.x,this.dimension>1&&vec.dimension>1&&(this.y+=vec.y),this.dimension>2&&vec.dimension>2&&(this.z+=vec.z)):"number"==typeof vec?1==arguments.length?(this.x+=vec,this.dimension>1&&(this.y+=vec),this.dimension>2&&(this.z+=vec)):2==arguments.length&&2==this.dimension?(this.x+=vec,this.y+=arguments[1]):3==arguments.length&&3==this.dimension?(this.x+=vec,this.y+=arguments[1],this.z+=arguments[2]):console.error(`Wrong number of argument compared to the vector's dimension (${this.dimension})`):console.error("Argument type not accepted"),this}mult(vec){return vec instanceof Vector?(this.x*=vec.x,this.dimension>1&&vec.dimension>1&&(this.y*=vec.y),this.dimension>2&&vec.dimension>2&&(this.z*=vec.z)):"number"==typeof vec?1==arguments.length?(this.x*=vec,this.dimension>1&&(this.y*=vec),this.dimension>2&&(this.z*=vec)):2==arguments.length&&2==this.dimension?(this.x*=vec,this.y*=arguments[1]):3==arguments.length&&3==this.dimension?(this.x*=vec,this.y*=arguments[1],this.z*=arguments[2]):console.error(`Wrong number of argument compared to the vector's dimension (${this.dimension})`):console.error("Argument type not accepted"),this}div(vec){return vec instanceof Vector?(this.x/=vec.x,this.dimension>1&&vec.dimension>1&&(this.y/=vec.y),this.dimension>2&&vec.dimension>2&&(this.z/=vec.z)):"number"==typeof vec?1==arguments.length?(this.x/=vec,this.dimension>1&&(this.y/=vec),this.dimension>2&&(this.z/=vec)):2==arguments.length&&2==this.dimension?(this.x/=vec,this.y/=arguments[1]):3==arguments.length&&3==this.dimension?(this.x/=vec,this.y/=arguments[1],this.z/=arguments[2]):console.error(`Wrong number of argument compared to the vector's dimension (${this.dimension})`):console.error("Argument type not accepted"),this}invert(antiClockwise=!1){return this.dimension>1&&(2==this.dimension?[this.x,this.y]=[this.y,this.x]:[this.x,this.y,this.z]=antiClockwise?[this.y,this.z,this.x]:[this.z,this.x,this.y]),this}get mag(){return Math.hypot(this.x,this.y,this.z)}setMag(newMag){return this.x=this.x*newMag/this.mag,this.dimension>1&&(this.y=this.y*newMag/this.mag),this.dimension>2&&(this.z=this.z*newMag/this.mag),this}toString(){return`{x: ${this.x}${this.dimension>1?`, y: ${this.y}`:""}${this.dimension>2?`, z: ${this.z}`:""}}`}array(){let arr=[this.x];return this.dimension>1&&arr.push(this.y),this.dimension>2&&arr.push(this.z),arr}bow(x,y,style={}){if(3==this.dimension)return;style.strokeWeight?strokeWeight(style.strokeWeight):strokeWeight(1),style.stroke?stroke(style.stroke):stroke("#fff");let rotation=degree(vectorToAngle(this));this.y<0&&(rotation*=-1),push(),translate(x,y),line(0,0,this.x,this.y),linecap("round"),push(),translate(this.x,this.y),push(),rotate(rotation+25),line(0,0,-min(this.mag/2.5,10),0),rotate(-50),line(0,0,-min(this.mag/2.5,10),0),pop(),pop(),pop()}}class Shape{constructor(x,y,fill="transparent",stroke="transparent",strokeWeight=1){this.pos=new Vector(x,y),this.style={background:fill,stroke:stroke,strokeWeight:strokeWeight},this.drawOrigin=!1,this.speed=0,this.acceleration=0,this.isRunning=!1,this.origin="topLeft"}set fill(color){this.style.background=color}set stroke(color){this.style.stroke=color}set strokeWeight(int){this.style.strokeWeight=int}set run(bool){this.running="boolean"==typeof bool&&bool}get background(){return this.style.background}get stroke(){return this.style.stroke}get strokeWeight(){return this.style.strokeWeight}get x(){return this.pos.x}get y(){return this.pos.y}get running(){return this.isRunning}showOrigin(bool){this.drawOrigin="boolean"==typeof bool&&bool}setOrigin(newOrigin){this.origin=originArr.includes(newOrigin)?newOrigin:"topLeft"}setPosition(x,y=null){!y&&x instanceof Vector?(this.pos.x=x.x,this.pos.y=x.y):(this.pos.x=x,this.pos.y=y)}move(x,y){let speed=this.speed+(this.running?this.acceleration:0);!y&&x instanceof Vector?(this.pos.x+=x.x*speed,this.pos.y+=x.y*speed):(this.pos.x+=x*speed,this.pos.y+=y*speed)}}class RectangleShape extends Shape{constructor(x,y,w,h,fill="black",stroke="transparent",strokeWeight=1){super(x,y,fill,stroke,strokeWeight),this.dim=new Vector(w,h)}get width(){return this.dim.x}get height(){return this.dim.y}set width(newWidth){this.dim.x=newWidth}set height(newHeight){this.dim.y=newHeight}draw(){fill(this.background),stroke(this.stroke),strokeWeight(this.strokeWeight);let offset=getOffsetVector(this);fillRect(this.x-offset.x,this.y-offset.y,this.width,this.height),line(this.x-offset.x-this.strokeWeight/2,this.y-offset.y,this.x-offset.x+this.width+this.strokeWeight/2,this.y-offset.y),line(this.x-offset.x-this.strokeWeight/2,this.y-offset.y+this.height,this.x-offset.x+this.width+this.strokeWeight/2,this.y-offset.y+this.height),line(this.x-offset.x,this.y-offset.y,this.x-offset.x,this.y-offset.y+this.height),line(this.x-offset.x+this.width,this.y-offset.y,this.x-offset.x+this.width,this.y-offset.y+this.height),this.drawOrigin&&(fill("#0F8"),noStroke(),circle(this.x,this.y,2))}hover(){let offset=getOffsetVector(this),x1=this.x-offset.x,y1=this.y-offset.y,x2=x1+this.width,y2=y1+this.height;return x1<=mouseX&&mouseX<=x2&&y1<=mouseY&&mouseY<=y2}}class CircleShape extends Shape{constructor(x,y,r,fill="black",stroke="transparent",strokeWeight=1){super(x,y,fill,stroke,strokeWeight),this.radius=r-strokeWeight,this.origin="center"}get r(){return this.radius+this.strokeWeight}set r(newRadius){this.radius=newRadius-this.strokeWeight}draw(){fill(this.background),stroke(this.stroke),strokeWeight(this.strokeWeight);let offset=getOffsetVector(this);circle(this.x-offset.x,this.y-offset.y,this.r),this.drawOrigin&&(fill("#0F8"),noStroke(),circle(this.x,this.y,2))}hover(){let offset=getOffsetVector(this);return pow(mouseX-this.x-offset.x)+pow(mouseY-this.y-offset.y)<pow(this.r)}}class TriangleShape extends Shape{constructor(x,y,baseLength,baseTiltinDegree,triangleHeight,heightPosition,fill="black",stroke="transparent",strokeWeight=1){super(x,y,fill,stroke,strokeWeight),this.baseLength=baseLength,this.baseTilt=radian(baseTiltinDegree),this.height=triangleHeight,this.heightPos=heightPosition,this.origin="bottomLeft",this.vertex={A:new Vector(0,0),B:new Vector(0,0),C:new Vector(0,0)},this.refreshVertexPos()}get A(){return this.vertex.A}get B(){return this.vertex.B}get C(){return this.vertex.C}draw(){this.refreshVertexPos(),fill(this.background),stroke(this.stroke),strokeWeight(this.strokeWeight),polyline(this.A.x,this.A.y,this.B.x,this.B.y,this.C.x,this.C.y,this.vertex.A.x,this.A.y),this.drawOrigin&&(fill("#0F8"),noStroke(),circle(this.x,this.y,2))}refreshVertexPos(){let vec=angleToVector(this.baseTilt);this.vertex.A.set(this.x,this.y),this.vertex.B.set(this.A.x+this.baseLength*vec.x,this.A.y+this.baseLength*vec.y);let d=dist(this.A,this.B)/2,k=new Vector(this.A.x+d*vec.x,this.A.y+d*vec.y),angle=angleToVector(radian(degree(this.baseTilt)-90));this.vertex.C.set(k.x+this.height*angle.x,k.y+this.height*angle.y,5)}hover(){let triArea=abs((this.B.x-this.A.x)*(this.C.y-this.A.y)-(this.C.x-this.A.x)*(this.B.y-this.A.y)),area1,area2,area3;return abs((this.A.x-mouseX)*(this.B.y-mouseY)-(this.B.x-mouseX)*(this.A.y-mouseY))+abs((this.B.x-mouseX)*(this.C.y-mouseY)-(this.C.x-mouseX)*(this.B.y-mouseY))+abs((this.C.x-mouseX)*(this.A.y-mouseY)-(this.A.x-mouseX)*(this.C.y-mouseY))==triArea}}class Triangle extends TriangleShape{constructor(x1,y1,x2,y2,x3,y3,fill="black",stroke="black",strokeWeight=1){let A=new Vector(x1,y1),B=new Vector(x2,y2),C=new Vector(x3,y3),baseTilt=degree(Math.atan2(B.y-A.y,B.x-A.x)),base=dist(A,B),atv=angleToVector(radian(baseTilt)),k=new Vector(A.x+base/2*atv.x,A.y+base/2*atv.y),tHeight=dist(k,C),heightPosition=C.x-A.x;super(A.x,A.y,base,baseTilt,tHeight,heightPosition,fill,stroke,strokeWeight)}}class Path{constructor(x=null,y=null){this.d=null,this.isClosed=!1,x&&y&&this.MoveTo(x,y)}clear(){this.d=null}draw(){null!==this.d?path(this.d+(this.isClosed?" Z":"")):console.error("Cannot draw it because you didn't make a path")}MoveTo(x,y){null===this.d?this.d=`M ${x} ${y}`:this.d+=` M ${x} ${y}`}moveTo(x,y){if(null===this.d)return console.error("You have to initialize the fist path's position");this.d+=` m ${x} ${y}`}LineTo(x,y){if(null===this.d)return console.error("You have to initialize the first path's position");this.d+=` L ${x} ${y}`}lineTo(x,y){if(null===this.d)return console.error("You have to initialize the first path's position");this.d+=` l ${x} ${y}`}Horizontal(x){if(null===this.d)return console.error("You have to initialize the first path's position");this.d+=` H ${x}`}horizontal(x){if(null===this.d)return console.error("You have to initialize the first path's position");this.d+=` h ${x}`}Vertical(y){if(null===this.d)return console.error("You have to initialize the first path's position");this.d+=` V ${y}`}vertical(y){if(null===this.d)return console.error("You have to initialize the first path's position");this.d+=` v ${y}`}Arc(x,y,r,start,end,antiClockwise=!1){if(null===this.d)return console.error("You have to initialize the first path's position");this.d+=` A ${x} ${y} ${r} ${start} ${end} ${!0===antiClockwise?1:0}`}arc(x,y,r,start,end,antiClockwise=!1){if(null===this.d)return console.error("You have to initialize the first path's position");this.d+=` a ${x} ${y} ${r} ${start} ${end} ${!0===antiClockwise?1:0}`}close(){if(null===this.d)return console.error("You have to initialize the first path's position");this.isClosed=!0}open(){if(null===this.d)return console.error("You have to initialize the first path's position");this.isClosed=!1}move(x,y=null){null===y&&x instanceof Vector&&([x,y]=[x.x,x.y]),null!==this.d&&(this.d=this.d.replace(/([MLHVA])\s([\d\.]+)(\s([\d\.]+))?/g,(c,p1,p2,p3)=>"H"==p1?`${p1} ${parseFloat(p2)+x}`:"V"==p1?`${p1} ${parseFloat(p2)+y}`:`${p1} ${parseFloat(p2)+x} ${parseFloat(p3)+y}`))}}